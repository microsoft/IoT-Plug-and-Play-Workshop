{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "UniqueID": {
      "type": "string",
      "metadata": {
        "description": "Unique ID.  E.g. your name.  Must be Alphanumeric (a~z, 0~9), and 5~12 characters"
      },
      "minLength": 5,
      "maxLength": 12
    },
    "GitHubURL" : {
      "type": "string",
      "defaultValue": "https://github.com/microsoft/IoT-Plug-and-Play-Workshop-WebApp.git"
    },
    "GitHubBranch" : {
      "type": "string",
      "defaultValue": "main"
    },
    "PrivateModelRepo" : {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/daisukeiot/iot-plugandplay-models/"
    },
    "PrivateModelBranch" : {
      "type": "string",
      "defaultValue": "privatemodels"
    },
    "ResourcePrefix" : {
        "type": "string",
      "defaultValue": "IoTPnPWS"
    },
    "envTag" : {
      "type": "string",
      "defaultValue": "Web App Template"
    }
  },
  "variables": {
    "webApp" : {
      "hostingPlan": "[concat(parameters('ResourcePrefix'), '-HostingPlan-', parameters('UniqueID'))]",
      "functionsName": "[concat(parameters('ResourcePrefix'), '-Functions-', parameters('UniqueID'))]",
      "webappName": "[concat(parameters('ResourcePrefix'), '-Portal-', parameters('UniqueID'))]",
      "webappUrl" : "[toLower(concat('https://', parameters('ResourcePrefix'), '-Portal-', parameters('UniqueID'), '.azurewebsites.net'))]"
    },
    "iothub" : {
      "name" : "[concat(parameters('ResourcePrefix'), '-Hub-', parameters('UniqueID'))]",
      "eventHubsCG" : "[concat(parameters('ResourcePrefix'), '-Hub-', parameters('UniqueID'), '/events/eventhubs-cg')]",
      "systemTopic": "IoTHubSystemTopic"
    },
    "dpsName": "[concat(parameters('ResourcePrefix'), '-DPS-', parameters('UniqueID'))]",
    "tsi" : {
      "environment": "[concat(parameters('ResourcePrefix'), '-TSI-', parameters('UniqueID'))]",
      "location": "eastasia",
      "eventSource": "IoTPnPWS-TSI-EventHubs"
    },
    "mapName": "[concat(parameters('ResourcePrefix'), '-MAP-', parameters('UniqueID'))]",
    "storageName": "[toLower(concat('iotpnpwsstor', parameters('UniqueID')))]",
    "signalrName": "[concat(parameters('ResourcePrefix'), '-SignalR-', parameters('UniqueID'))]",
    "envTag": "[parameters('envTag')]"
  },
  "resources": [
    // IoT Hub
    {
      "name": "[variables('iothub').name]",
      "type": "Microsoft.Devices/IotHubs",
      "apiVersion": "2020-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "ENV": "[variables('envTag')]"
      },
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {}
    },
    // SignalR
    {
      "name": "[variables('signalrName')]",
      "type": "Microsoft.SignalRService/SignalR",
      "apiVersion": "2020-05-01",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    // Maps
    {
      "name": "[variables('mapName')]",
      "type": "Microsoft.Maps/accounts",
      "apiVersion": "2018-05-01",
      "location": "global",
      "sku": {
        "name": "S1"
      }
    },
    // TSI
    {
      "name": "[variables('tsi').environment]",
      "type": "Microsoft.TimeSeriesInsights/environments",
      "apiVersion": "2020-05-15",
      "location": "[variables('tsi').location]",
      "sku": {
        "name": "L1",
        "capacity": 1
      },
      "kind": "Gen2",
      "properties": {}
    },
    // DPS
    {
      "name": "[variables('dpsName')]",
      "type": "Microsoft.Devices/provisioningServices",
      "apiVersion": "2020-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Devices/IotHubs', variables('iothub').name)]"
      ],
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {}
    },
    // Storage Account
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {}
    },
    // Server Farms
    {
      "name": "[variables('webApp').hostingPlan]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-09-01",
      "location": "[resourceGroup().location]",
      "properties": {}
    },
    // WebApp
    {
      "name": "[variables('webApp').webappName]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-09-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('webApp').hostingPlan)]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ],
      "tags": {
        "ENV": "[variables('envTag')]"
      },
      "properties": {
        "serverFarmId": "[variables('webApp').hostingPlan]",
        "siteConfig": {
          "webSocketsEnabled": true
        }
      },
      "resources": [
        {
          "apiVersion": "2020-09-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.SignalRService/SignalR', variables('signalrName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
            "[resourceId('Microsoft.Web/Sites', variables('webApp').webappName)]",
            "[resourceId('Microsoft.Web/Sites/sourcecontrols', variables('webApp').webappName, 'web')]"
          ],
          "properties": {
            "Azure__SignalR__ConnectionString" : "[concat('Endpoint=https://', toLower(variables('signalrName')), '.service.signalr.net;AccessKey=', listKeys(variables('signalrName'), providers('Microsoft.SignalRService', 'SignalR').apiVersions[0]).primaryKey)]",
            "Azure__IoTHub__ConnectionString" : "[concat('HostName=', reference(resourceId('Microsoft.Devices/IoTHubs', variables('iothub').name), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).hostName, ';SharedAccessKeyName=iothubowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iothub').name), providers('Microsoft.Devices', 'IoTHubs').apiVersions[0]).value[0].primaryKey)]",
            "Azure__AzureMap__MapKey" : "[listKeys(resourceId('Microsoft.Maps/accounts', variables('mapName')), providers('Microsoft.Maps', 'accounts').apiVersions[0]).primaryKey]",
            "Azure__TimeSeriesInsights__tsiUri": "[reference(resourceId('Microsoft.TimeSeriesInsights/environments', variables('tsi').environment)).dataAccessFQDN]",
            "Azure__TimeSeriesInsights__clientId": "",
            "Azure__TimeSeriesInsights__tenantId": "",
            "Azure__TimeSeriesInsights__tsiSecret": "",
            "Azure__Dps__IdScope": "[reference(resourceId('Microsoft.Devices/ProvisioningServices',variables('dpsName'))).idScope]",
            "Azure__Dps__ConnectionString": "[concat('HostName=', variables('dpsName'), '.azure-devices-provisioning.net;SharedAccessKeyName=provisioningserviceowner;SharedAccessKey=', listKeys(resourceId('Microsoft.Devices/provisioningServices', variables('dpsName')), providers('Microsoft.Devices', 'provisioningServices').apiVersions[0]).value[0].primaryKey)]",
            "Azure__ModelRepository__repoUrl":"[concat(parameters('PrivateModelRepo'), parameters('PrivateModelBranch'))]",
            "Azure__GitHub__token":""
          }
        },
        {
          "name": "web",
          "type": "sourcecontrols",
          "apiVersion": "2020-09-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('webApp').webappName)]"
          ],
          "properties": {
            "repoUrl": "[parameters('GitHubURL')]",
            "branch": "[parameters('GitHubBranch')]",
            "IsManualIntegration": true
          }
        }
      ]
    }
  ]
}